name: CI/CD Pipeline for Docker Build, Push, and Deploy

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  DOCKER_IMAGE_NAME: node-app
  DOCKER_COMPOSE_FILE: docker-compose.yaml

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx (to build Docker images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Step 4: Build Docker image
      - name: Build Docker Image
        run: docker build -t $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME:latest .

      # Step 5: Push Docker image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: docker push $DOCKER_HUB_USERNAME/$DOCKER_IMAGE_NAME:latest

  deploy:
    # Run the deploy step only after the Docker image has been built and pushed
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Install Docker Compose
      - name: Install Docker Compose
        run: sudo apt-get install docker-compose -y

      # Step 3: Deploy using Docker Compose
      - name: Deploy Application
        run: |
          docker-compose down   # Take down the old containers
          docker-compose pull   # Pull the updated image from Docker Hub
          docker-compose up -d  # Start the containers in detached mode
